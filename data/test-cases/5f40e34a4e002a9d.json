{"uid":"5f40e34a4e002a9d","name":"test_view_task","fullName":"tests.ui.Task.test_view_task#test_view_task","historyId":"f78c297c4505280c1c7c26aec6d7922b","time":{"start":1757344729509,"stop":1757344747704,"duration":18195},"status":"failed","statusMessage":"AssertionError: View task name list","statusTrace":"page = <Page url='https://demo.growcrm.io/tasks'>\n\n    def test_view_task(page):\n        task_page = TaskPage(page)\n    \n        # task_id, data = task_fixture\n        # task_title = data[\"title\"]\n        task_title = TestData.random_title()\n        app = \"Mobile banking app development\"\n    \n        task_page.access_task()\n        task_page.create_task(app, task_title, \"1999\", \"100\", TestData.random_title(), \"08-12-2025\")\n    \n        task_page.search_task(task_title)\n>       task_page.view_task(task_title, \"Low\", app, \"Dellon Inc\",\n                            task_title, app, \"In Progress\",\"Low\", \"Steven Mallet\")\n\ntests/ui/Task/test_view_task.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/task_page.py:47: in view_task\n    self.assert_text_contain(TaskLocator.TASK_NAME_TAG, task_name_tag, \"View task name list\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.task_page.TaskPage object at 0x7f42304ace10>\nlocator = \"//div[@class='kanban-card-content-comntainer']//div[@class='x-title wordwrap']\"\nexpected_substring = 'Title_article', message = 'View task name list'\n\n    def assert_text_contain(self, locator: str, expected_substring: str, message = \"\"):\n        actual_result = self.page.text_content(locator).strip()\n>       assert actual_result and expected_substring in actual_result, (message or f\"Text mismatch. Expected: '{expected_substring}', but got: '{actual_result}'\")\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError: View task name list\n\npages/base_page.py:79: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"base_url","time":{"start":1757344646753,"stop":1757344646753,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"delete_output_dir","time":{"start":1757344646753,"stop":1757344646753,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_verify_url","time":{"start":1757344646753,"stop":1757344646753,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"_session_faker","time":{"start":1757344646753,"stop":1757344646754,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"pytestconfig","time":{"start":1757344646753,"stop":1757344646753,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_context","time":{"start":1757344646754,"stop":1757344647491,"duration":737},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"page","time":{"start":1757344726654,"stop":1757344729508,"duration":2854},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: View task name list","statusTrace":"page = <Page url='https://demo.growcrm.io/tasks'>\n\n    def test_view_task(page):\n        task_page = TaskPage(page)\n    \n        # task_id, data = task_fixture\n        # task_title = data[\"title\"]\n        task_title = TestData.random_title()\n        app = \"Mobile banking app development\"\n    \n        task_page.access_task()\n        task_page.create_task(app, task_title, \"1999\", \"100\", TestData.random_title(), \"08-12-2025\")\n    \n        task_page.search_task(task_title)\n>       task_page.view_task(task_title, \"Low\", app, \"Dellon Inc\",\n                            task_title, app, \"In Progress\",\"Low\", \"Steven Mallet\")\n\ntests/ui/Task/test_view_task.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/task_page.py:47: in view_task\n    self.assert_text_contain(TaskLocator.TASK_NAME_TAG, task_name_tag, \"View task name list\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.task_page.TaskPage object at 0x7f42304ace10>\nlocator = \"//div[@class='kanban-card-content-comntainer']//div[@class='x-title wordwrap']\"\nexpected_substring = 'Title_article', message = 'View task name list'\n\n    def assert_text_contain(self, locator: str, expected_substring: str, message = \"\"):\n        actual_result = self.page.text_content(locator).strip()\n>       assert actual_result and expected_substring in actual_result, (message or f\"Text mismatch. Expected: '{expected_substring}', but got: '{actual_result}'\")\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError: View task name list\n\npages/base_page.py:79: AssertionError","steps":[],"attachments":[{"uid":"6a84d629c207fc3e","name":"stdout","source":"6a84d629c207fc3e.txt","type":"text/plain","size":1655}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"page::0","time":{"start":1757344749730,"stop":1757344749978,"duration":248},"status":"passed","steps":[],"attachments":[{"uid":"1e54e9f272c326d3","name":"test_view_task_screenshot","source":"1e54e9f272c326d3.png","type":"image/png","size":62676},{"uid":"9a4fc745205851a3","name":"Final URL","source":"9a4fc745205851a3.txt","type":"text/plain","size":29},{"uid":"bae0acb390f17fce","name":"test_view_task_video","source":"bae0acb390f17fce.mp4","type":"video/mp4","size":786432}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":3,"hasContent":true},{"name":"auth_context::0","time":{"start":1757344802399,"stop":1757344802517,"duration":118},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests.ui.Task"},{"name":"suite","value":"test_view_task"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"7043-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.ui.Task.test_view_task"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"5f40e34a4e002a9d.json","parameterValues":[]}